Task 2.1, create.sql:

CREATE TABLE Student (
  login    CHAR(6) PRIMARY KEY,
  jmeno    VARCHAR(30) NOT NULL,
  prijmeni VARCHAR(50) NOT NULL);
  
CREATE TABLE StudijniPlan (
  studentLogin CHAR(6) NOT NULL REFERENCES Student,
  kurzKod CHAR(11) NOT NULL REFERENCES Kurz,
  rok NUMBER(4) NOT NULL,
  PRIMARY KEY(studentLogin, kurzKod, rok));
  
CREATE TABLE Kurz (
  kod    CHAR(11) PRIMARY KEY,
  nazev  VARCHAR(50) NOT NULL); 
  
CREATE TABLE Garant (
  ucitelLogin CHAR(5) NOT NULL REFERENCES Ucitel,
  kurzKod CHAR(11) NOT NULL REFERENCES Kurz,
  rok NUMBER(4) NOT NULL,
  PRIMARY KEY(ucitelLogin, kurzKod, rok));  

CREATE TABLE Ucitel (
  login    char(5) PRIMARY KEY,
  jmeno    VARCHAR(30) NOT NULL,
  prijmeni VARCHAR(50) NOT NULL);
  
----------------------------------------------------  
  
Task 2.3, init.sql:  

  INSERT INTO Student VALUES('pla457', 'Jan', 'Plaváèek');
  INSERT INTO Student VALUES('sob458', 'Yveta', 'Sobotová');
  INSERT INTO Student VALUES('sob451', 'Honza', 'Sob');
  
  INSERT INTO Kurz VALUES('456-dais-01', 'Databázové a informaèní systémy');
  INSERT INTO Kurz VALUES('456-tzd-01', 'Teorie zpracování dat');
  INSERT INTO Kurz VALUES('456-tis-01', 'Tvorba informaèních systémù');
  INSERT INTO Kurz VALUES('456-sd-01', 'Správa databází');
  INSERT INTO Kurz VALUES('456-sd2-01', 'Správa databází 2');
  
  INSERT INTO Ucitel VALUES('bay01', 'Josef', 'Bayer');
  INSERT INTO Ucitel VALUES('cod02', 'Stanislav', 'Codd');
  
  INSERT INTO StudijniPlan VALUES('pla457', '456-dais-01', 2009);
  INSERT INTO StudijniPlan VALUES('pla457', '456-tis-01', 2009);
  INSERT INTO StudijniPlan VALUES('pla457', '456-sd-01', 2009);
  INSERT INTO StudijniPlan VALUES('sob458', '456-tzd-01', 2009);
  INSERT INTO StudijniPlan VALUES('sob458', '456-sd-01', 2009);
  INSERT INTO StudijniPlan VALUES('sob458', '456-sd2-01', 2009);
  INSERT INTO StudijniPlan VALUES('sob451', '456-dais-01', 2009);
  INSERT INTO StudijniPlan VALUES('sob451', '456-tis-01', 2009);
  INSERT INTO StudijniPlan VALUES('sob451', '456-sd2-01', 2009);
  
  INSERT INTO Garant VALUES('bay01', '456-sd-01', 2009);
  INSERT INTO Garant VALUES('bay01', '456-sd2-01', 2009);
  INSERT INTO Garant VALUES('cod02', '456-dais-01', 2009);
  INSERT INTO Garant VALUES('cod02', '456-tzd-01', 2009);

----------------------------------------------------  

Task 2.4:

SELECT * FROM Student s, Ucitel u, Garant g, StudijniPlan p
  WHERE u.prijmeni='Codd' AND g.ucitellogin= u.login AND 
        p.rok=2009 AND p.kurzkod=g.kurzkod AND s.login= p.studentlogin;

SELECT k.* FROM Kurz k, Student s, StudijniPlan p
  WHERE s.prijmeni='Plaváèek' AND s.login=p.studentlogin AND p.rok=2009 AND k.kod= p.kurzkod;

SELECT k.* FROM Kurz k, Student s, StudijniPlan p
  WHERE s.prijmeni='Plaváèek' AND s.login=p.studentlogin AND k.kod= p.kurzkod;
  
SELECT DISTINCT(k.kod),k.nazev FROM Kurz k, StudijniPlan p
  WHERE p.rok=2009 AND k.kod=p.kurzKod;
  
SELECT DISTINCT(u.login), u.jmeno, u.prijmeni FROM Ucitel u, Garant g, StudijniPlan p
  WHERE p.rok=2009 AND g.rok=2009 AND g.kurzkod=p.kurzkod AND g.ucitellogin=u.login;
  
----------------------------------------------------  

Task 2.5:

1. ALTER TABLE ... ADD 
2. napø.: TO_DATE('15.08.2009', 'DD.MM.YYYY')
3. Použijeme napø.: SYSDATE - (3*365), což je nepøesné, najdìte pøesné øešení.

----------------------------------------------------  

Task 4.2: 

SELECT * FROM USER_TABLES;
5.1.2: SELECT TABLE_NAME, OWNER FROM ALL_TABLES;
5.1.3: SELECT COLUMN_NAME, DATA_TYPE FROM USER_TAB_COLUMNS WHERE TABLE_NAME='STUDENT';

----------------------------------------------------  

Task 4.3: 

COMMENT ON TABLE student IS 'Tabulka obsahuje zaznamy o studentech bakalarskeho, magisterskeho a doktorskeho studia';
COMMENT ON COLUMN student.fname IS 'Jméno studenta';

SELECT * FROM USER_TAB_COMMENTS;
SELECT * FROM USER_COL_COMMENTS;

SELECT * FROM USER_TAB_PRIVS;

SELECT * FROM ALL_TAB_PRIVS;

----------------------------------------------------  

Task 5:

SELECT COLUMN_NAME, DATA_TYPE FROM USER_TAB_COLUMNS WHERE TABLE_NAME=UPPER('student');

----------------------------------------------------------------------

Úkol 6:
6.1:
Alter table Ucitel Add oddeleni int check (value in (100, 200, 300))

---------------------------------------------------------------------

Úkol 7:

1) SELECT * FROM Student WHERE lname like 'Nov%';

2) SELECT * FROM Student WHERE lname like '%y';

3) SELECT * FROM Student WHERE lname like '%a%';

4) SELECT * FROM Student WHERE lname not like '%n%';

5) SELECT * FROM Student WHERE lname like '_o%';

6) SELECT * FROM Student WHERE lname like '%\_%' ESCAPE '\';

----------------------------------------------------------------------

Úkol 8:

1) SELECT login, jmeno, prijmeni, NVL(oddeleni,'neni definovano') FROM Ucitel;

2) SELECT login, jmeno, prijmeni,
NVL2(oddeleni,'Nezname','Definovano') FROM Teacher;

3) pokud jmeno=prijmeni pak se vypíše NULL

4) vrátí první ne NULL hodnotu v posloupnosti vstupních argumentù